{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/card\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    \"min-width\": \"150px\"\n  };\n};\nfunction HeatMapComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h3\", 11);\n    i0.ɵɵtext(2, \"Campaign Performance Heat Map\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p-dropdown\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function HeatMapComponent_ng_template_1_Template_p_dropdown_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectedMetric = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵproperty(\"options\", ctx_r0.metricOptions)(\"ngModel\", ctx_r0.selectedMetric);\n  }\n}\nfunction HeatMapComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getCellClass(cell_r4.intensity));\n    i0.ɵɵattribute(\"title\", ctx_r1.selectedMetric + \": \" + cell_r4.value + \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r4.value, \" \");\n  }\n}\nexport class HeatMapComponent {\n  constructor() {\n    this.selectedMetric = 'Engagement Rate';\n    this.metricOptions = [{\n      label: 'Engagement Rate',\n      value: 'Engagement Rate'\n    }, {\n      label: 'Conversion Rate',\n      value: 'Conversion Rate'\n    }, {\n      label: 'ROI',\n      value: 'ROI'\n    }];\n    this.heatMapData = [{\n      value: 85,\n      intensity: 'high'\n    }, {\n      value: 45,\n      intensity: 'low'\n    }, {\n      value: 67,\n      intensity: 'medium'\n    }, {\n      value: 92,\n      intensity: 'high'\n    }, {\n      value: 23,\n      intensity: 'low'\n    }, {\n      value: 78,\n      intensity: 'medium'\n    }, {\n      value: 56,\n      intensity: 'medium'\n    }, {\n      value: 81,\n      intensity: 'high'\n    }, {\n      value: 94,\n      intensity: 'high'\n    }, {\n      value: 62,\n      intensity: 'medium'\n    }, {\n      value: 34,\n      intensity: 'low'\n    }, {\n      value: 76,\n      intensity: 'medium'\n    }, {\n      value: 58,\n      intensity: 'medium'\n    }, {\n      value: 87,\n      intensity: 'high'\n    }];\n  }\n  ngOnInit() {}\n  getCellClass(intensity) {\n    switch (intensity) {\n      case 'high':\n        return 'heat-cell high';\n      case 'medium':\n        return 'heat-cell medium';\n      case 'low':\n        return 'heat-cell low';\n      default:\n        return 'heat-cell';\n    }\n  }\n}\nHeatMapComponent.ɵfac = function HeatMapComponent_Factory(t) {\n  return new (t || HeatMapComponent)();\n};\nHeatMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"app-heat-map\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[\"header\", \"Campaign Performance Heat Map\"], [\"pTemplate\", \"header\"], [1, \"heat-map-grid\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"mt-4\", \"text-xs\", \"text-500\"], [1, \"flex\", \"align-items-center\", \"gap-1\"], [1, \"w-1rem\", \"h-1rem\", \"bg-red-100\", \"border-round\"], [1, \"w-1rem\", \"h-1rem\", \"bg-orange-100\", \"border-round\"], [1, \"w-1rem\", \"h-1rem\", \"bg-green-100\", \"border-round\"], [1, \"w-1rem\", \"h-1rem\", \"bg-green-200\", \"border-round\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"p-4\"], [1, \"text-lg\", \"font-semibold\", \"m-0\"], [\"optionLabel\", \"label\", \"optionValue\", \"value\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [3, \"ngClass\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-card\", 0);\n      i0.ɵɵtemplate(1, HeatMapComponent_ng_template_1_Template, 4, 5, \"ng-template\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, HeatMapComponent_div_3_Template, 2, 3, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"span\");\n      i0.ɵɵtext(6, \"Low\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\");\n      i0.ɵɵtext(13, \"High\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.heatMapData);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i2.NgControlStatus, i2.NgModel, i3.Card, i4.PrimeTemplate, i5.Dropdown],\n  styles: [\"[_nghost-%COMP%]     .p-card .p-card-header {\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9oZWF0LW1hcC9oZWF0LW1hcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAucC1jYXJkIC5wLWNhcmQtaGVhZGVyIHtcbiAgcGFkZGluZzogMDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;IAEIA,+BAAiE;IACzBA,6CAA6B;IAAAA,iBAAK;IACxEA,sCAKmC;IAHjCA;MAAAA;MAAA;MAAA;IAAA,EAA4B;IAI9BA,iBAAa;;;;IADXA,eAAgC;IAAhCA,yCAAgC;IAJhCA,8CAAyB;;;;;IAU7BA,+BAE6D;IAC3DA,YACF;IAAAA,iBAAM;;;;;IAHDA,gEAAwC;IACxCA,2EAAuD;IAC1DA,eACF;IADEA,8CACF;;;ACPJ,OAAM,MAAOC,gBAAgB;EAyB3BC;IAxBA,mBAAc,GAAG,iBAAiB;IAClC,kBAAa,GAAG,CACd;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,KAAK,EAAE;IAAiB,CAAE,EACtD;MAAED,KAAK,EAAE,iBAAiB;MAAEC,KAAK,EAAE;IAAiB,CAAE,EACtD;MAAED,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAE,CAC/B;IAED,gBAAW,GAAkB,CAC3B;MAAEA,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAE,EAChC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAE,EAC/B;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,EAClC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAE,EAChC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAE,EAC/B;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,EAClC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,EAClC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAE,EAChC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAE,EAChC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,EAClC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAE,EAC/B;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,EAClC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAQ,CAAE,EAClC;MAAED,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAM,CAAE,CACjC;EAEe;EAEhBC,QAAQ,IAAW;EAEnBC,YAAY,CAACF,SAAiB;IAC5B,QAAQA,SAAS;MACf,KAAK,MAAM;QAAE,OAAO,gBAAgB;MACpC,KAAK,QAAQ;QAAE,OAAO,kBAAkB;MACxC,KAAK,KAAK;QAAE,OAAO,eAAe;MAClC;QAAS,OAAO,WAAW;IAAC;EAEhC;;;mBApCWJ,gBAAgB;AAAA;;QAAhBA,gBAAgB;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ7BZ,iCAA+C;MAC7CA,iFAWc;MAEdA,8BAA2B;MACzBA,iEAIM;MACRA,iBAAM;MAENA,8BAAmF;MAC3EA,mBAAG;MAAAA,iBAAO;MAChBA,8BAA2C;MACzCA,yBAAyD;MAI3DA,iBAAM;MACNA,6BAAM;MAAAA,qBAAI;MAAAA,iBAAO;;;MAfKA,eAAc;MAAdA,yCAAc","names":["i0","HeatMapComponent","constructor","label","value","intensity","ngOnInit","getCellClass","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/runner/workspace/src/app/components/heat-map/heat-map.component.html","/home/runner/workspace/src/app/components/heat-map/heat-map.component.ts"],"sourcesContent":["<p-card header=\"Campaign Performance Heat Map\">\n  <ng-template pTemplate=\"header\">\n    <div class=\"flex align-items-center justify-content-between p-4\">\n      <h3 class=\"text-lg font-semibold m-0\">Campaign Performance Heat Map</h3>\n      <p-dropdown \n        [options]=\"metricOptions\" \n        [(ngModel)]=\"selectedMetric\"\n        optionLabel=\"label\"\n        optionValue=\"value\"\n        [style]=\"{'min-width': '150px'}\">\n      </p-dropdown>\n    </div>\n  </ng-template>\n  \n  <div class=\"heat-map-grid\">\n    <div *ngFor=\"let cell of heatMapData\" \n         [ngClass]=\"getCellClass(cell.intensity)\"\n         [attr.title]=\"selectedMetric + ': ' + cell.value + '%'\">\n      {{cell.value}}\n    </div>\n  </div>\n  \n  <div class=\"flex align-items-center justify-content-between mt-4 text-xs text-500\">\n    <span>Low</span>\n    <div class=\"flex align-items-center gap-1\">\n      <div class=\"w-1rem h-1rem bg-red-100 border-round\"></div>\n      <div class=\"w-1rem h-1rem bg-orange-100 border-round\"></div>\n      <div class=\"w-1rem h-1rem bg-green-100 border-round\"></div>\n      <div class=\"w-1rem h-1rem bg-green-200 border-round\"></div>\n    </div>\n    <span>High</span>\n  </div>\n</p-card>","import { Component, OnInit } from '@angular/core';\n\ninterface HeatMapCell {\n  value: number;\n  intensity: 'low' | 'medium' | 'high';\n}\n\n@Component({\n  selector: 'app-heat-map',\n  templateUrl: './heat-map.component.html',\n  styleUrls: ['./heat-map.component.scss']\n})\nexport class HeatMapComponent implements OnInit {\n  selectedMetric = 'Engagement Rate';\n  metricOptions = [\n    { label: 'Engagement Rate', value: 'Engagement Rate' },\n    { label: 'Conversion Rate', value: 'Conversion Rate' },\n    { label: 'ROI', value: 'ROI' }\n  ];\n\n  heatMapData: HeatMapCell[] = [\n    { value: 85, intensity: 'high' },\n    { value: 45, intensity: 'low' },\n    { value: 67, intensity: 'medium' },\n    { value: 92, intensity: 'high' },\n    { value: 23, intensity: 'low' },\n    { value: 78, intensity: 'medium' },\n    { value: 56, intensity: 'medium' },\n    { value: 81, intensity: 'high' },\n    { value: 94, intensity: 'high' },\n    { value: 62, intensity: 'medium' },\n    { value: 34, intensity: 'low' },\n    { value: 76, intensity: 'medium' },\n    { value: 58, intensity: 'medium' },\n    { value: 87, intensity: 'high' }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  getCellClass(intensity: string): string {\n    switch (intensity) {\n      case 'high': return 'heat-cell high';\n      case 'medium': return 'heat-cell medium';\n      case 'low': return 'heat-cell low';\n      default: return 'heat-cell';\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}