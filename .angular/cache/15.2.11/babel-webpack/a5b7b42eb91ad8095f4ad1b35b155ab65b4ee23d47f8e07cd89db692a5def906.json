{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/card\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    \"min-width\": \"150px\"\n  };\n};\nfunction ChannelPerformanceComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\", 5);\n    i0.ɵɵtext(2, \"Channel Performance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p-dropdown\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function ChannelPerformanceComponent_ng_template_1_Template_p_dropdown_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectedMetric = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵproperty(\"options\", ctx_r0.metricOptions)(\"ngModel\", ctx_r0.selectedMetric);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return [a0, a1];\n};\nfunction ChannelPerformanceComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵelement(2, \"i\", 9);\n    i0.ɵɵelementStart(3, \"span\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"div\", 12);\n    i0.ɵɵelement(7, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 14);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const channel_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c1, channel_r4.icon, \"text-\" + channel_r4.color + \"-500\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(channel_r4.channel);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"width\", channel_r4.value, \"%\");\n    i0.ɵɵproperty(\"ngClass\", \"bg-\" + channel_r4.color + \"-500\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", channel_r4.value, \"% \");\n  }\n}\nexport class ChannelPerformanceComponent {\n  constructor() {\n    this.selectedMetric = 'Delivery Rate';\n    this.metricOptions = [{\n      label: 'Delivery Rate',\n      value: 'Delivery Rate'\n    }, {\n      label: 'Open Rate',\n      value: 'Open Rate'\n    }, {\n      label: 'Click Rate',\n      value: 'Click Rate'\n    }];\n    this.channelData = [{\n      channel: 'SMS',\n      value: 85,\n      icon: 'pi-mobile',\n      color: 'blue'\n    }, {\n      channel: 'WhatsApp',\n      value: 78,\n      icon: 'pi-whatsapp',\n      color: 'green'\n    }, {\n      channel: 'Email',\n      value: 92,\n      icon: 'pi-envelope',\n      color: 'red'\n    }, {\n      channel: 'Push',\n      value: 69,\n      icon: 'pi-bell',\n      color: 'purple'\n    }, {\n      channel: 'RCS',\n      value: 74,\n      icon: 'pi-comments',\n      color: 'orange'\n    }];\n  }\n  ngOnInit() {}\n}\nChannelPerformanceComponent.ɵfac = function ChannelPerformanceComponent_Factory(t) {\n  return new (t || ChannelPerformanceComponent)();\n};\nChannelPerformanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChannelPerformanceComponent,\n  selectors: [[\"app-channel-performance\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[\"header\", \"Channel Performance\"], [\"pTemplate\", \"header\"], [1, \"flex\", \"flex-column\", \"gap-4\"], [\"class\", \"flex align-items-center justify-content-between\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"p-4\"], [1, \"text-lg\", \"font-semibold\", \"m-0\"], [\"optionLabel\", \"label\", \"optionValue\", \"value\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\"], [1, \"flex\", \"align-items-center\", \"gap-3\"], [1, \"pi\", \"text-xl\", 3, \"ngClass\"], [1, \"font-medium\", \"text-700\"], [1, \"flex\", \"align-items-center\", \"gap-4\", \"flex-1\", 2, \"max-width\", \"300px\"], [1, \"progress-bar\", \"flex-1\"], [1, \"progress-fill\", 3, \"ngClass\"], [1, \"text-sm\", \"font-medium\", \"text-900\", 2, \"min-width\", \"3rem\", \"text-align\", \"right\"]],\n  template: function ChannelPerformanceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-card\", 0);\n      i0.ɵɵtemplate(1, ChannelPerformanceComponent_ng_template_1_Template, 4, 5, \"ng-template\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, ChannelPerformanceComponent_div_3_Template, 10, 9, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.channelData);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i2.NgControlStatus, i2.NgModel, i3.Card, i4.PrimeTemplate, i5.Dropdown],\n  styles: [\"[_nghost-%COMP%]     .p-card .p-card-header {\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jaGFubmVsLXBlcmZvcm1hbmNlL2NoYW5uZWwtcGVyZm9ybWFuY2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxVQUFBO0FBQUYiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDaGFubmVsIFBlcmZvcm1hbmNlIHNwZWNpZmljIHN0eWxlc1xuOmhvc3QgOjpuZy1kZWVwIC5wLWNhcmQgLnAtY2FyZC1oZWFkZXIge1xuICBwYWRkaW5nOiAwO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;IAEIA,8BAAiE;IACzBA,mCAAmB;IAAAA,iBAAK;IAC9DA,qCAKmC;IAHjCA;MAAAA;MAAA;MAAA;IAAA,EAA4B;IAI9BA,iBAAa;;;;IADXA,eAAgC;IAAhCA,yCAAgC;IAJhCA,8CAAyB;;;;;;;;IAU7BA,8BAAiG;IAE7FA,uBAAuF;IACvFA,gCAAmC;IAAAA,YAAmB;IAAAA,iBAAO;IAE/DA,+BAA4E;IAExEA,0BAE2C;IAC7CA,iBAAM;IACNA,gCAAuF;IACrFA,YACF;IAAAA,iBAAO;;;;IAXeA,eAA4D;IAA5DA,0GAA4D;IAC/CA,eAAmB;IAAnBA,wCAAmB;IAM/CA,eAA+B;IAA/BA,8CAA+B;IAD/BA,2DAA0C;IAI/CA,eACF;IADEA,kDACF;;;ACdR,OAAM,MAAOC,2BAA2B;EAgBtCC;IAfA,mBAAc,GAAG,eAAe;IAChC,kBAAa,GAAG,CACd;MAAEC,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAe,CAAE,EAClD;MAAED,KAAK,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAW,CAAE,EAC1C;MAAED,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAY,CAAE,CAC7C;IAED,gBAAW,GAAkB,CAC3B;MAAEC,OAAO,EAAE,KAAK;MAAED,KAAK,EAAE,EAAE;MAAEE,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAM,CAAE,EAC/D;MAAEF,OAAO,EAAE,UAAU;MAAED,KAAK,EAAE,EAAE;MAAEE,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAO,CAAE,EACvE;MAAEF,OAAO,EAAE,OAAO;MAAED,KAAK,EAAE,EAAE;MAAEE,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAK,CAAE,EAClE;MAAEF,OAAO,EAAE,MAAM;MAAED,KAAK,EAAE,EAAE;MAAEE,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAE,EAChE;MAAEF,OAAO,EAAE,KAAK;MAAED,KAAK,EAAE,EAAE;MAAEE,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAQ,CAAE,CACpE;EAEe;EAEhBC,QAAQ,IAAW;;;mBAlBRP,2BAA2B;AAAA;;QAA3BA,2BAA2B;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDdxCb,iCAAqC;MACnCA,4FAWc;MAEdA,8BAAoC;MAClCA,6EAeM;MACRA,iBAAM;;;MAhB6EA,eAAc;MAAdA,yCAAc","names":["i0","ChannelPerformanceComponent","constructor","label","value","channel","icon","color","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/runner/workspace/src/app/components/channel-performance/channel-performance.component.html","/home/runner/workspace/src/app/components/channel-performance/channel-performance.component.ts"],"sourcesContent":["<p-card header=\"Channel Performance\">\n  <ng-template pTemplate=\"header\">\n    <div class=\"flex align-items-center justify-content-between p-4\">\n      <h3 class=\"text-lg font-semibold m-0\">Channel Performance</h3>\n      <p-dropdown \n        [options]=\"metricOptions\" \n        [(ngModel)]=\"selectedMetric\"\n        optionLabel=\"label\"\n        optionValue=\"value\"\n        [style]=\"{'min-width': '150px'}\">\n      </p-dropdown>\n    </div>\n  </ng-template>\n  \n  <div class=\"flex flex-column gap-4\">\n    <div class=\"flex align-items-center justify-content-between\" *ngFor=\"let channel of channelData\">\n      <div class=\"flex align-items-center gap-3\">\n        <i class=\"pi text-xl\" [ngClass]=\"[channel.icon, 'text-' + channel.color + '-500']\"></i>\n        <span class=\"font-medium text-700\">{{channel.channel}}</span>\n      </div>\n      <div class=\"flex align-items-center gap-4 flex-1\" style=\"max-width: 300px;\">\n        <div class=\"progress-bar flex-1\">\n          <div class=\"progress-fill\" \n               [ngClass]=\"'bg-' + channel.color + '-500'\"\n               [style.width.%]=\"channel.value\"></div>\n        </div>\n        <span class=\"text-sm font-medium text-900\" style=\"min-width: 3rem; text-align: right;\">\n          {{channel.value}}%\n        </span>\n      </div>\n    </div>\n  </div>\n</p-card>","import { Component, OnInit } from '@angular/core';\n\ninterface ChannelData {\n  channel: string;\n  value: number;\n  icon: string;\n  color: 'blue' | 'green' | 'red' | 'purple' | 'orange';\n}\n\n@Component({\n  selector: 'app-channel-performance',\n  templateUrl: './channel-performance.component.html',\n  styleUrls: ['./channel-performance.component.scss']\n})\nexport class ChannelPerformanceComponent implements OnInit {\n  selectedMetric = 'Delivery Rate';\n  metricOptions = [\n    { label: 'Delivery Rate', value: 'Delivery Rate' },\n    { label: 'Open Rate', value: 'Open Rate' },\n    { label: 'Click Rate', value: 'Click Rate' }\n  ];\n\n  channelData: ChannelData[] = [\n    { channel: 'SMS', value: 85, icon: 'pi-mobile', color: 'blue' },\n    { channel: 'WhatsApp', value: 78, icon: 'pi-whatsapp', color: 'green' },\n    { channel: 'Email', value: 92, icon: 'pi-envelope', color: 'red' },\n    { channel: 'Push', value: 69, icon: 'pi-bell', color: 'purple' },\n    { channel: 'RCS', value: 74, icon: 'pi-comments', color: 'orange' }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}